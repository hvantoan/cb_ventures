name: Build Docker Container

on:
  push:
    branches:
      - production
env:
  BRANCH: ${{ github.ref == 'refs/heads/master' && 'master' || 'production' }}

jobs:
  build:
    permissions:
      contents: read
      actions: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v6
        env:
          CACHE_IMAGE: itvantoan/cb_ventures:buildcache
        with:
          push: true
          context: .
          file: 'apps/ventures/Dockerfile'
          tags: itvantoan/cb_ventures:${{ env.BRANCH }}
          build-args: |
            API_URL=${{ vars.API_URL }}
            NEXTAUTH_URL=${{ vars.NEXTAUTH_URL }}
            NEXTAUTH_SECRET=${{ vars.NEXTAUTH_SECRET }}
          cache-from: type=registry,ref=${{ env.CACHE_IMAGE }}
          cache-to: type=registry,ref=${{ env.CACHE_IMAGE }}
          platforms: linux/amd64
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub
        uses: actions/checkout@v2

      - name: Deploy to Ventures
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: 'eval `ssh-agent -s` && ssh-add ~/.ssh/github && cd ~/ctx/host-config && git pull && cd ventures/apps && docker compose --compatibility up --remove-orphans --build -d'
